# This file has been autogenerated by the pywayland scanner

# Copyright © 2008-2011 Kristian Høgsberg
# Copyright © 2010-2011 Intel Corporation
# Copyright © 2012-2013 Collabora, Ltd.
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation files
# (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice (including the
# next paragraph) shall be included in all copies or substantial
# portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

from __future__ import annotations

from pywayland.protocol_core import (
    Argument,
    ArgumentType,
    Global,
    Interface,
    Proxy,
    Resource,
)


class ZwlrDataControlOfferV1(Interface):
    """Offer to transfer data

    A wlr_data_control_offer represents a piece of data offered for transfer by
    another client (the source client). The offer describes the different MIME
    types that the data can be converted to and provides the mechanism for
    transferring the data directly from the source client.
    """

    name = "zwlr_data_control_offer_v1"
    version = 1


class ZwlrDataControlOfferV1Proxy(Proxy[ZwlrDataControlOfferV1]):
    interface = ZwlrDataControlOfferV1

    @ZwlrDataControlOfferV1.request(
        Argument(ArgumentType.String),
        Argument(ArgumentType.FileDescriptor),
    )
    def receive(self, mime_type: str, fd: int) -> None:
        """Request that the data is transferred

        To transfer the offered data, the client issues this request and
        indicates the MIME type it wants to receive. The transfer happens
        through the passed file descriptor (typically created with the pipe
        system call). The source client writes the data in the MIME type
        representation requested and then closes the file descriptor.

        The receiving client reads from the read end of the pipe until EOF and
        then closes its end, at which point the transfer is complete.

        This request may happen multiple times for different MIME types.

        :param mime_type:
            MIME type desired by receiver
        :type mime_type:
            `ArgumentType.String`
        :param fd:
            file descriptor for data transfer
        :type fd:
            `ArgumentType.FileDescriptor`
        """
        self._marshal(0, mime_type, fd)

    @ZwlrDataControlOfferV1.request()
    def destroy(self) -> None:
        """Destroy this offer

        Destroys the data offer object.
        """
        self._marshal(1)
        self._destroy()


class ZwlrDataControlOfferV1Resource(Resource):
    interface = ZwlrDataControlOfferV1

    @ZwlrDataControlOfferV1.event(
        Argument(ArgumentType.String),
    )
    def offer(self, mime_type: str) -> None:
        """Advertise offered mime type

        Sent immediately after creating the wlr_data_control_offer object. One
        event per offered MIME type.

        :param mime_type:
            offered MIME type
        :type mime_type:
            `ArgumentType.String`
        """
        self._post_event(0, mime_type)


class ZwlrDataControlOfferV1Global(Global):
    interface = ZwlrDataControlOfferV1


ZwlrDataControlOfferV1._gen_c()
ZwlrDataControlOfferV1.proxy_class = ZwlrDataControlOfferV1Proxy
ZwlrDataControlOfferV1.resource_class = ZwlrDataControlOfferV1Resource
ZwlrDataControlOfferV1.global_class = ZwlrDataControlOfferV1Global
