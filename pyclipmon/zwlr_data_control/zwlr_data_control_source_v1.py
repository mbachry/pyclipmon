# This file has been autogenerated by the pywayland scanner

# Copyright © 2008-2011 Kristian Høgsberg
# Copyright © 2010-2011 Intel Corporation
# Copyright © 2012-2013 Collabora, Ltd.
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation files
# (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice (including the
# next paragraph) shall be included in all copies or substantial
# portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

from __future__ import annotations

import enum

from pywayland.protocol_core import (
    Argument,
    ArgumentType,
    Global,
    Interface,
    Proxy,
    Resource,
)


class ZwlrDataControlSourceV1(Interface):
    """Offer to transfer data

    The wlr_data_control_source object is the source side of a
    wlr_data_control_offer. It is created by the source client in a data
    transfer and provides a way to describe the offered data and a way to
    respond to requests to transfer the data.
    """

    name = "zwlr_data_control_source_v1"
    version = 1

    class error(enum.IntEnum):
        invalid_offer = 1


class ZwlrDataControlSourceV1Proxy(Proxy[ZwlrDataControlSourceV1]):
    interface = ZwlrDataControlSourceV1

    @ZwlrDataControlSourceV1.request(
        Argument(ArgumentType.String),
    )
    def offer(self, mime_type: str) -> None:
        """Add an offered mime type

        This request adds a MIME type to the set of MIME types advertised to
        targets. Can be called several times to offer multiple types.

        Calling this after wlr_data_control_device.set_selection is a protocol
        error.

        :param mime_type:
            MIME type offered by the data source
        :type mime_type:
            `ArgumentType.String`
        """
        self._marshal(0, mime_type)

    @ZwlrDataControlSourceV1.request()
    def destroy(self) -> None:
        """Destroy this source

        Destroys the data source object.
        """
        self._marshal(1)
        self._destroy()


class ZwlrDataControlSourceV1Resource(Resource):
    interface = ZwlrDataControlSourceV1

    @ZwlrDataControlSourceV1.event(
        Argument(ArgumentType.String),
        Argument(ArgumentType.FileDescriptor),
    )
    def send(self, mime_type: str, fd: int) -> None:
        """Send the data

        Request for data from the client. Send the data as the specified MIME
        type over the passed file descriptor, then close it.

        :param mime_type:
            MIME type for the data
        :type mime_type:
            `ArgumentType.String`
        :param fd:
            file descriptor for the data
        :type fd:
            `ArgumentType.FileDescriptor`
        """
        self._post_event(0, mime_type, fd)

    @ZwlrDataControlSourceV1.event()
    def cancelled(self) -> None:
        """Selection was cancelled

        This data source is no longer valid. The data source has been replaced
        by another data source.

        The client should clean up and destroy this data source.
        """
        self._post_event(1)


class ZwlrDataControlSourceV1Global(Global):
    interface = ZwlrDataControlSourceV1


ZwlrDataControlSourceV1._gen_c()
ZwlrDataControlSourceV1.proxy_class = ZwlrDataControlSourceV1Proxy
ZwlrDataControlSourceV1.resource_class = ZwlrDataControlSourceV1Resource
ZwlrDataControlSourceV1.global_class = ZwlrDataControlSourceV1Global
